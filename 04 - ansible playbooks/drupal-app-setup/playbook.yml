---
- name: Deploy drupal application
  hosts: all
  become: true
  vars_files:
    - variables.yml

  pre_tasks:
    - name: Update repo cache if needed
      ansible.builtin.package:
        update_cache: true
        cache_valid_time: 3600

  handlers:
    - name: Restart Apache
      ansible.builtin.service:
        name: apache2
        state: restarted

  tasks:
    - name: Get packages to manage apt apt_repository
      ansible.builtin.package:
        name:
          - python3-apt
          - python3-pycurl
        state: present

    - name: Add ondrej repo for later PHP versions
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php
        update_cache: true

    - name: Install Apache, MySQL, PHP and other dependencies
      ansible.builtin.package:
        name:
          - acl
          - git
          - curl
          - unzip
          - sendmail
          - apache2
          - php7.4-common
          - php7.4-cli
          - php7.4-dev
          - php7.4-gd
          - php7.4-curl
          - php7.4-json
          - php7.4-opcache
          - php7.4-xml
          - php7.4-mbstring
          - php7.4-pdo
          - php7.4-mysql
          - php7.4-apcu
          - libpcre3-dev
          - libapache2-mod-php7.4
          - python3-mysqldb
          - mysql-server
        state: present

    - name: Disable firewall (since this is for dev only)
      ansible.builtin.service:
        name: ufw
        state: stopped

    - name: Start Apache, MySQL and PHP
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      with_items:
        - apache2
        - mysql

    - name: Enable Apache rewrite module (required for Drupal)
      community.general.apache2_module:
        name: rewrite
        state: present
      notify: Restart Apache

    - name: Add Apache virtualhost for Drupal
      ansible.builtin.template:
        src: templates/drupal.test.conf.j2
        dest: "/etc/apache2/sites-available/{{ domain }}.test.conf"
        owner: root
        group: root
        mode: 0644
      notify: Restart Apache

    - name: Enable Drupal site
      ansible.builtin.command: >
        a2ensite {{ domain }}.test
        creates=/etc/apache2/sites-enabled/{{ domain }}.test.conf
      notify: Restart Apache

    - name: Disable default site
      ansible.builtin.command: >
        a2dissite 000-default
        removes=/etc/apache2/sites-enabled/000-default.conf
      notify: Restart Apache

    - name: Adjust OpCache memory setting
      ansible.builtin.lineinfile:
        dest: /etc/php/7.4/apache2/conf.d/10-opcache.ini
        regexp: ^opcache.memory_consumption
        line: opcache.memory_consumption = 96
        state: present
      notify: Restart Apache

    - name: Create a MySQL database for Drupal
      community.mysql.mysql_db:
        db: "{{ domain }}"
        state: present

    - name: Create a MySQL user for drupal
      community.mysql.mysql_user:
        name: "{{ domain }}"
        password: 1234
        priv: "{{ domain }}.*:ALL"
        host: localhost
        state: present

    - name: Download Composer installer
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-installer.php
        mode: 0755

    - name: Run Composer installer
      ansible.builtin.command: >
        php composer-installer.php
        chdir=/tmp
        creates=/usr/local/bin/composer

    - name: Move composer into globally-accessible location
      ansible.builtin.command: >
        mv /tmp/composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer

    - name: Ensure Drupal directory exists
      ansible.builtin.file:
        path: "{{ drupal_core_path }}"
        state: directory
        owner: www-data
        group: www-data
        mode: 0755

    - name: Check if Drupal project already exists
      ansible.builtin.stat:
        path: "{{ drupal_core_path }}/composer.json"
      register: drupal_composer_json

    - name: Create Drupal project
      community.general.composer:
        command: create-project
        arguments: drupal/recommended-project "{{ drupal_core_path }}"
        working_dir: "{{ drupal_core_path }}"
        no_dev: true
      become_user: www-data
      when: not drupal_composer_json.stat.exists

    - name: Add Drush to Drupal site with Composer
      become_user: www-data
      community.general.composer:
        command: require
        arguments: drush/drush:10.*
        working_dir: "{{ drupal_core_path }}"
      when: not drupal_composer_json.stat.exists

    - name: Install Drupal
      become_user: www-data
      ansible.builtin.command: >
        vendor/bin/drush si y --site-name="{{ drupal_site_name }}"
        --account-name=admin
        --account-pass=admin
        --db-url=mysql://{{ domain }}:1234@localhost/{{ domain }}
        --root={{ drupal_core_path }}/web
      args:
        chdir: "{{ drupal_core_path }}"
        creates: "{{ drupal_core_path }}/web/sites/default/settings.php"
      notify: Restart Apache
